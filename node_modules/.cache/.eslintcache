[{"D:\\Codinova-Frontend-Assignment\\assignment\\src\\index.js":"1","D:\\Codinova-Frontend-Assignment\\assignment\\src\\reportWebVitals.js":"2","D:\\Codinova-Frontend-Assignment\\assignment\\src\\App.js":"3","D:\\Codinova-Frontend-Assignment\\assignment\\src\\components\\GifList.js":"4","D:\\Codinova-Frontend-Assignment\\assignment\\src\\components\\Pagination.js":"5","D:\\Codinova-Frontend-Assignment\\assignment\\src\\components\\SearchBar.js":"6","D:\\Codinova-Frontend-Assignment\\assignment\\src\\services\\api.js":"7"},{"size":535,"mtime":1693453503077,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1693453503186,"results":"10","hashOfConfig":"9"},{"size":1852,"mtime":1693467741109,"results":"11","hashOfConfig":"9"},{"size":324,"mtime":1693466256581,"results":"12","hashOfConfig":"9"},{"size":1309,"mtime":1693466527331,"results":"13","hashOfConfig":"9"},{"size":503,"mtime":1693466262030,"results":"14","hashOfConfig":"9"},{"size":606,"mtime":1693467824627,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"anxrzj",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Codinova-Frontend-Assignment\\assignment\\src\\index.js",[],[],[],"D:\\Codinova-Frontend-Assignment\\assignment\\src\\reportWebVitals.js",[],[],"D:\\Codinova-Frontend-Assignment\\assignment\\src\\App.js",["39"],[],"import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { fetchTrendingGifs, searchGifs } from './services/api';\nimport GifList from './components/GifList';\nimport SearchBar from './components/SearchBar';\nimport Pagination from './components/Pagination';\nfunction App() {\n  const [gifs, setGifs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Number of items per page\n  const [searchQuery, setSearchQuery] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      fetchTrending();\n    } else {\n      performSearch(searchQuery);\n    }\n  }, [currentPage, searchQuery]);\n  const fetchTrending = async () => {\n    const data = await fetchTrendingGifs(itemsPerPage, (currentPage - 1) * itemsPerPage);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / itemsPerPage)); // Calculate total pages based on data length\n  };\n  const performSearch = async (query) => {\n    const data = await searchGifs(query, itemsPerPage, (currentPage - 1) * itemsPerPage);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / itemsPerPage)); // Calculate total pages based on data length\n  };\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n  };\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <h1>Giphy GIF Viewer</h1>\n      <SearchBar onSearch={handleSearch} />\n      <GifList gifs={gifs} />\n      page\n      {/* {totalPages > 1 && ( */}\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={handlePageChange}\n        />\n      {/* )} */}\n    </div>\n  );\n}\nexport default App;\n\n\n","D:\\Codinova-Frontend-Assignment\\assignment\\src\\components\\GifList.js",[],[],"D:\\Codinova-Frontend-Assignment\\assignment\\src\\components\\Pagination.js",[],[],"D:\\Codinova-Frontend-Assignment\\assignment\\src\\components\\SearchBar.js",[],[],"D:\\Codinova-Frontend-Assignment\\assignment\\src\\services\\api.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":20,"column":6,"nodeType":"42","endLine":20,"endColumn":32,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchTrending' and 'performSearch'. Either include them or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [currentPage, fetchTrending, performSearch, searchQuery]",{"range":"47","text":"48"},[693,719],"[currentPage, fetchTrending, performSearch, searchQuery]"]