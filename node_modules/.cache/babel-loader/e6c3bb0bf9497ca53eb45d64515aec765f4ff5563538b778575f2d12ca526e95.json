{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codinova-Frontend-Assignment\\\\assignment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { fetchTrendingGifs, searchGifs } from './services/api';\nimport GifList from './components/GifList';\nimport SearchBar from './components/SearchBar';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gifs, setGifs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Number of items per page\n  const [searchQuery, setSearchQuery] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    if (searchQuery === '') {\n      fetchTrending();\n    } else {\n      performSearch(searchQuery);\n    }\n  }, [currentPage, searchQuery]);\n  const fetchTrending = async () => {\n    const data = await fetchTrendingGifs(itemsPerPage, (currentPage - 1) * itemsPerPage);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / itemsPerPage)); // Calculate total pages based on data length\n  };\n\n  const performSearch = async query => {\n    const data = await searchGifs(query, itemsPerPage, (currentPage - 1) * itemsPerPage);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / itemsPerPage)); // Calculate total pages based on data length\n  };\n\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n  };\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Giphy GIF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GifList, {\n      gifs: gifs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \"page\", /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C0nkOhY7008NohyIjR3AgPQr5tA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTrendingGifs","searchGifs","GifList","SearchBar","Pagination","jsxDEV","_jsxDEV","App","_s","gifs","setGifs","currentPage","setCurrentPage","itemsPerPage","searchQuery","setSearchQuery","totalPages","setTotalPages","fetchTrending","performSearch","data","Math","ceil","length","query","handleSearch","handlePageChange","newPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onPageChange","_c","$RefreshReg$"],"sources":["D:/Codinova-Frontend-Assignment/assignment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { fetchTrendingGifs, searchGifs } from './services/api';\nimport GifList from './components/GifList';\nimport SearchBar from './components/SearchBar';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n  const [gifs, setGifs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Number of items per page\n  const [searchQuery, setSearchQuery] = useState('');\n  const [totalPages, setTotalPages] = useState(0);\n\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      fetchTrending();\n    } else {\n      performSearch(searchQuery);\n    }\n  }, [currentPage, searchQuery]);\n\n  const fetchTrending = async () => {\n    const data = await fetchTrendingGifs(itemsPerPage, (currentPage - 1) * itemsPerPage);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / itemsPerPage)); // Calculate total pages based on data length\n  };\n\n  const performSearch = async (query) => {\n    const data = await searchGifs(query, itemsPerPage, (currentPage - 1) * itemsPerPage);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / itemsPerPage)); // Calculate total pages based on data length\n  };\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (newPage) => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      setCurrentPage(newPage);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Giphy GIF Viewer</h1>\n      <SearchBar onSearch={handleSearch} />\n      <GifList gifs={gifs} />\n      page\n      {/* {totalPages > 1 && ( */}\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={handlePageChange}\n        />\n      {/* )} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}