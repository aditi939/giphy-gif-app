{"ast":null,"code":"var _jsxFileName = \"D:\\\\Codinova-Frontend-Assignment\\\\assignment\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { fetchTrendingGifs, searchGifs } from './services/api';\nimport GifList from './components/GifList';\nimport SearchBar from './components/SearchBar';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gifs, setGifs] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    if (searchQuery === '') {\n      fetchTrending();\n    } else {\n      performSearch(searchQuery);\n    }\n  }, [currentPage, searchQuery]);\n  const fetchTrending = async () => {\n    const data = await fetchTrendingGifs(10, (currentPage - 1) * 10);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / 10)); // Calculate total pages based on data length\n  };\n\n  const performSearch = async query => {\n    const data = await searchGifs(query, 10, (currentPage - 1) * 10);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / 10)); // Calculate total pages based on data length\n  };\n\n  const handleSearch = query => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n  };\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Giphy GIF Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GifList, {\n      gifs: gifs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Nw4WOJ49pNMJjQV9JmSrBmZvMP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchTrendingGifs","searchGifs","GifList","SearchBar","Pagination","jsxDEV","_jsxDEV","App","_s","gifs","setGifs","totalPages","setTotalPages","currentPage","setCurrentPage","searchQuery","setSearchQuery","fetchTrending","performSearch","data","Math","ceil","length","query","handleSearch","handlePageChange","page","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onPageChange","_c","$RefreshReg$"],"sources":["D:/Codinova-Frontend-Assignment/assignment/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { fetchTrendingGifs, searchGifs } from './services/api';\nimport GifList from './components/GifList';\nimport SearchBar from './components/SearchBar';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n  const [gifs, setGifs] = useState([]);\n  const [totalPages, setTotalPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      fetchTrending();\n    } else {\n      performSearch(searchQuery);\n    }\n  }, [currentPage, searchQuery]);\n\n  const fetchTrending = async () => {\n    const data = await fetchTrendingGifs(10, (currentPage - 1) * 10);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / 10)); // Calculate total pages based on data length\n  };\n\n  const performSearch = async (query) => {\n    const data = await searchGifs(query, 10, (currentPage - 1) * 10);\n    setGifs(data);\n    setTotalPages(Math.ceil(data.length / 10)); // Calculate total pages based on data length\n  };\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Giphy GIF Viewer</h1>\n      <SearchBar onSearch={handleSearch} />\n      <GifList gifs={gifs} />\n      {totalPages > 1 && (\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={handlePageChange}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}